/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN4VIEWBASE_HPP
#define SCREEN4VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::BoxWithBorder boxWithBorder2_1;
    touchgfx::Box box1;
    touchgfx::Box box2_1;
    touchgfx::TextAreaWithOneWildcard overTempInternal1;
    touchgfx::TextAreaWithOneWildcard underTempDischarge1;
    touchgfx::TextAreaWithOneWildcard overTempDischarge1;
    touchgfx::TextAreaWithOneWildcard underTempCharge1;
    touchgfx::TextAreaWithOneWildcard overTempCharge1;
    touchgfx::TextAreaWithOneWildcard overCurrentDischarge;
    touchgfx::TextAreaWithOneWildcard shortCircuitCharge;
    touchgfx::TextAreaWithOneWildcard underTempInternal1;
    touchgfx::TextAreaWithOneWildcard overCurrentCharge1;
    touchgfx::TextArea text99999;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard cellOverVoltage1;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea textArea98;
    touchgfx::Box box2;
    touchgfx::BoxWithBorder boxWithBorder2_2;
    touchgfx::TextArea textArea4;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::TextArea textArea5;
    touchgfx::TextAreaWithOneWildcard cellUnderVoltage1;
    touchgfx::TextArea textArea100;
    touchgfx::TextAreaWithOneWildcard HealthBatt1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t OVERTEMPINTERNAL1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar overTempInternal1Buffer[OVERTEMPINTERNAL1_SIZE];
    static const uint16_t UNDERTEMPDISCHARGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar underTempDischarge1Buffer[UNDERTEMPDISCHARGE1_SIZE];
    static const uint16_t OVERTEMPDISCHARGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar overTempDischarge1Buffer[OVERTEMPDISCHARGE1_SIZE];
    static const uint16_t UNDERTEMPCHARGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar underTempCharge1Buffer[UNDERTEMPCHARGE1_SIZE];
    static const uint16_t OVERTEMPCHARGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar overTempCharge1Buffer[OVERTEMPCHARGE1_SIZE];
    static const uint16_t OVERCURRENTDISCHARGE_SIZE = 8;
    touchgfx::Unicode::UnicodeChar overCurrentDischargeBuffer[OVERCURRENTDISCHARGE_SIZE];
    static const uint16_t SHORTCIRCUITCHARGE_SIZE = 8;
    touchgfx::Unicode::UnicodeChar shortCircuitChargeBuffer[SHORTCIRCUITCHARGE_SIZE];
    static const uint16_t UNDERTEMPINTERNAL1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar underTempInternal1Buffer[UNDERTEMPINTERNAL1_SIZE];
    static const uint16_t OVERCURRENTCHARGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar overCurrentCharge1Buffer[OVERCURRENTCHARGE1_SIZE];
    static const uint16_t CELLOVERVOLTAGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar cellOverVoltage1Buffer[CELLOVERVOLTAGE1_SIZE];
    static const uint16_t CELLUNDERVOLTAGE1_SIZE = 8;
    touchgfx::Unicode::UnicodeChar cellUnderVoltage1Buffer[CELLUNDERVOLTAGE1_SIZE];
    static const uint16_t HEALTHBATT1_SIZE = 5;
    touchgfx::Unicode::UnicodeChar HealthBatt1Buffer[HEALTHBATT1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SCREEN4VIEWBASE_HPP
